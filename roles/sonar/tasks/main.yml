---
- name: Requirements 
  import_tasks: requirements.yml 

- name: Unarchive SonarQube
  unarchive:
    src: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.4.1.35646.zip
    dest: "/vagrant"
    remote_src: yes

#   I can't copy without "linux-x86-64"
#- name: Copy sonar in your dest
#  copy:
#    src: /vagrant/sonarqube-8.4.1.35646/bin/linux-x86-64
#    dest: /opt/sonar
#  when:
#    -  '"/opt/sonar" is not exists'

- name: Move Sonar into dest
  command: >
    mv /vagrant/sonarqube-8.4.1.35646 /opt/sonar
    creates=/opt/sonar/COPYING

- name: Configure SonarQube JDBC - db.user
  lineinfile:
    dest: /opt/sonar/conf/sonar.properties
    regexp: "^#sonar.jdbc.username"
    line: "sonar.jdbc.username={{ db.user }}"
    
- name: Configure SonarQube JDBC - db.password
  lineinfile:
    dest: /opt/sonar/conf/sonar.properties
    regexp: "^#sonar.jdbc.password"
    line: "sonar.jdbc.password={{ db.password }}"

- name: Configure SonarQube JDBC - URL
  lineinfile:
    dest: /opt/sonar/conf/sonar.properties
    regexp: "^#sonar.jdbc.url=jdbc:postgresql://"
    line: "sonar.jdbc.url=jdbc:postgresql://127.0.0.1/{{ db.schema }}"

- name: Create  user
  user:
     name: "{{sonar.os_user_name}}"
     password: "{{sonar.os_user_password |  password_hash('sha512') }}"
     state: present
     shell: /bin/bash
     system: yes

- name: chown
  file:
    path: "/opt/sonar"
    recurse: yes
    owner: "{{sonar.os_user_name}}"
    group: "{{sonar.os_user_name}}"
    state: directory
    mode: '0777'

- name: Disable SELinux
  selinux:
    state: disabled

- name: Create sonar service
  template: src=sonar.service.j2 dest=/etc/systemd/system/sonar.service mode=644
#  when:
#    -  '"/etc/systemd/system/sonar.service" is not exists'

- name: Enable and start sonar service
  service:
    name: sonar.service
    enabled: yes
    state: started


